// Generated by LiveScript 1.2.0
(function(){
  var Sequelize, sequelize, Certificate, ManagedHosts, CSR;
  Sequelize = require("sequelize");
  sequelize = new Sequelize("database", "username", "password", {
    dialect: "sqlite",
    storage: app.configDir + "/rs-server.sqlite"
  });
  Certificate = sequelize.define("User", {
    id: {
      type: Sequelize.INTEGER,
      primaryKey: true,
      autoIncrement: true
    },
    commonName: Sequelize.STRING,
    ou: Sequelize.STRING,
    fingerprint: Sequelize.STRING
  });
  ManagedHosts = sequelize.define("ManagedHosts", {
    status: Sequelize.STRING,
    permission: Sequelize.STRING
  });
  Certificate.hasMany(Certificate, {
    through: ManagedHosts
  });
  CSR = sequelize.define("CSR", {
    id: {
      type: Sequelize.INTEGER,
      primaryKey: true,
      autoIncrement: true
    },
    commonName: Sequelize.STRING,
    ou: Sequelize.STRING,
    modulus: Sequelize.STRING,
    pem: Sequelize.STRING,
    cert: Sequelize.STRING,
    privateKey: Sequelize.STRING,
    remoteEndpoint: Sequelize.STRING
  });
  sequelize.sync().complete(function(err){
    if (!!err) {
      return console.log("Unable to connect to the database:", err);
    } else {
      return console.log("Connection has been established successfully.");
    }
  });
  exports.sequelize = sequelize;
  exports.Certificate = Certificate;
  exports.ManagedHosts = ManagedHosts;
  exports.CSR = CSR;
}).call(this);
